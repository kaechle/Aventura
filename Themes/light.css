meta {
  -theme-display-name: "Aventura Light";
  -theme-interface-style: light;
  -theme-vibrancy: none;
  -theme-accent-color: auto;
}

/* window */

meta.window {
  background-color: hsla(0, 0%, 93%, 1);
  border-color: hsla(0, 0%, 83%, 1);
}

meta.titlebar {
  color: hsl(240, 1%, 29%);
  background-color: hsla(0, 0%, 99%, 1);
  border-color: hsla(0, 0%, 87%, 1);
}
meta.titlebar.inactive {
  color: hsl(270, 1%, 67%);
  background-color: hsl(0, 0%, 91%);
  border-color: hsla(210, 1%, 73%, 1);
}

meta.button {
  background: hsla(0, 0%, 100%, 1);
  color: hsla(0, 0%, 15%, 1);
  border: hsla(0, 0%, 71%, 1);
}

meta.button.highlighted {
  background: hsla(0, 0%, 93%, 1);
  color: hsla(0, 0%, 15%, 1);
  border: hsla(0, 0%, 71%, 1);
}

meta.button.selected {
  background: hsl(0, 0%, 91%);
  color: hsla(177, 0%, 100%, 1);
  border: hsla(177, 1%, 59%, 0);
}

meta.button.highlighted.selected {
  color: white;
}

meta.button.disabled {
  background: hsla(177, 0%, 59%, 0.2);
  color: hsla(177, 0%, 62%, 1);
  border: hsla(177, 1%, 72%, 1);
}

meta.textfield {
  background-color: hsla(0, 0%, 100%, 1);
  border-color: hsla(300, 1%, 86%, 1);
}

meta.textfield.highlighted {
  background-color: hsla(240, 7%, 12%, 0);
  border-color: hsl(177, 1%, 64%);
}

/* document styles */

meta.document {
  background-color: hsla(198, 100%, 99%, 1);
  color: hsla(0, 0%, 40%, 0.5);
}

meta.document.button {
  background: linear-gradient(hsl(210, 5%, 85%), hsl(210, 5%, 81%));
  border: linear-gradient(hsla(210, 5%, 11%, 0), hsla(210, 5%, 8%, 0));
}

meta.document.button.disabled {
  background: linear-gradient(hsla(220, 5%, 35%, 0.3), hsla(220, 5%, 31%, 0.3));
}

meta.document.button.highlighted {
  background: linear-gradient(hsl(210, 5%, 34%), hsl(210, 5%, 30%));
}

meta.document.textfield {
  background-color: hsla(198, 23%, 98%, 1);
  border-color: hsl(0, 0%, 71%);
}

meta.document.textfield.highlighted {
  background-color: hsla(198, 23%, 98%, 1);
  border-color: hsla(198, 13%, 25%, 1);
}

/* text editing */

meta.text {
  color: hsla(0, 0%, 20%, 1);
}

meta.text.invisible {
  color: hsla(0, 0%, 40%, 0.1);
}

meta.text.selected {
  background-color: hsla(198, 34%, 92%, 1);
}

meta.cursor {
  background-color: hsla(198, 34%, 22%, 1);
}

meta.indentguide {
  color: hsla(0, 0%, 40%, 0.2);
}

meta.gutter {
  color: hsla(0, 0%, 40%, 0.1);
}

meta.gutter.selected {
  background-color: hsla(198, 34%, 92%, 1);
  color: hsla(0, 0%, 40%, 0.3);
}

/* Syntax styles */

comment {
  color: hsla(0, 0%, 40%, 0.5);
}

processing {
  color: hsla(0, 0%, 20%, 1);
}

declaration {
  color: hsl(358, 100%, 39%);
}

bracket {
  color: hsla(0, 0%, 20%, 1);
}

operator {
  color: hsla(0, 0%, 20%, 1);
}

invalid {
  color: hsl(358, 100%, 39%);
  color: hsla(0, 0%, 20%, 1);
}

link {
  color: hsla(0, 0%, 20%, 1);
}

/* Keywords */

keyword {
  color: hsl(18, 100%, 35%);
}

keyword.modifier {
  color: hsla(0, 0%, 20%, 1);
}

keyword.condition {
  color: hsla(0, 0%, 20%, 1);
}

keyword.construct {
  color: hsla(0, 0%, 20%, 1);
}

keyword.statement {
  color: hsla(0, 0%, 20%, 1);
}

keyword.self {
  font-style: italic;
  color: hsl(358, 100%, 39%);
}

keyword.self.prefix {
  color: hsla(0, 0%, 20%, 1);
}

/* Values */

value.boolean {
  color: hsl(182, 73%, 28%);
}

value.null {
  color: hsl(18, 100%, 35%);
}

value.number {
  color: hsl(203, 36%, 48%);
}

value.entity {
  color: hsl(203, 36%, 48%);
}

value.symbol {
  color: hsl(203, 36%, 48%);
}

/* Identifiers */

identifier {
  color: hsl(18, 100%, 35%);
}

identifier.constant,
identifier.global,
identifier.variable {
  color: hsla(0, 0%, 20%, 1);
}

identifier.constant.prefix,
identifier.global.prefix,
identifier.variable.prefix {
  color: hsla(0, 0%, 20%, 1);
}

identifier.property {
  color: hsl(182, 73%, 28%);
}

identifier.property.prefix {
  color: hsla(0, 0%, 20%, 1);
}

identifier.decorator,
identifier.function {
  color: hsl(182, 73%, 28%);
}

identifier.method {
  color: hsl(39, 100%, 38%);
}

identifier.key {
  color: hsl(182, 73%, 28%);
}

identifier.argument {
  color: hsl(18, 100%, 35%);
}

identifier.argument.prefix {
  color: hsla(0, 0%, 20%, 1);
}

/* Strings */

string {
  color: hsl(358, 100%, 39%);
}

string.delimiter {
  color: hsl(358, 100%, 39%);
}

string.escape {
  color: hsl(182, 73%, 28%);
}

string.key {
  color: hsl(39, 100%, 38%);
}

string-keyword {
  color: hsla(0, 0%, 20%, 1);
}

string-template {
  color: hsla(0, 0%, 20%, 1);
}

regex {
  color: hsla(0, 0%, 20%, 1);
}

regex.escape {
  color: hsla(0, 0%, 20%, 1);
}

cdata {
  color: hsla(0, 0%, 20%, 1);
}

/* Types */

definition.class.name,
definition.type.name,
definition.package.name,
definition.enum.name,
definition.union.name,
definition.struct.name {
}

/* Members */

definition.property.name {
}

definition.function.name,
definition.method.name {
}

/* Javascript */

javascript.bracket {
  color: hsla(0, 0%, 20%, 1);
}

javascript.operator {
  color: hsl(182, 73%, 28%);
}

/* tags */

tag {
  color: hsla(0, 0%, 20%, 1);
}

tag.name {
  color: hsl(203, 96%, 28%);
  font-weight: bold;
}

tag.framework {
  color: hsl(203, 96%, 28%);
}

tag.framework.name {
  color: hsl(203, 36%, 48%);
}

tag.attribute.name {
  color: hsl(182, 73%, 28%);
  font-weight: bold;
}

tag.framework.attribute.name {
  color: hsl(182, 73%, 28%);
}

tag.attribute.value {
  color: hsl(18, 100%, 35%);
}

tag.attribute.value.delimiter {
  color: hsl(18, 100%, 35%);
}

tag.attribute.operator {
  color: hsl(182, 73%, 28%);
}

tag.attribute.value.link {
  color: hsl(18, 100%, 35%);
}

/* css */

style.at {
  color: hsl(203, 96%, 28%);
  font-weight: bold;
}

style.selector.element {
  color: hsl(203, 96%, 28%);
  font-weight: bold;
}

style.selector.identifier.id {
  color: hsl(223, 88%, 38%);
  font-weight: bold;
}

style.selector.identifier.class {
  color: hsl(182, 73%, 28%);
  font-weight: bold;
}

style.selector.pseudoclass {
  color: hsl(182, 73%, 28%);
}

style.selector.pseudoelement {
  color: hsl(203, 96%, 28%);
}

style.attribute.name {
  color: hsla(0, 0%, 20%, 1);
}

style.value.number {
  color: hsl(18, 100%, 35%);
}

style.value.color.hex {
  color: hsl(18, 100%, 35%);
}

style.value.keyword {
  color: hsl(18, 100%, 35%);
}

style.value.color.named {
  color: hsl(18, 100%, 35%);
}

style.value.identifier.function {
  color: hsl(39, 100%, 38%);
}

/* Markup */
markup.heading {
  color: hsla(0, 0%, 20%, 1);
}
markup.line {
  color: hsla(0, 0%, 20%, 1);
}
markup.bold {
  color: hsla(0, 0%, 20%, 1);
  font-weight: bold;
}
markup.italic {
  color: hsla(0, 0%, 20%, 1);
  font-style: italic;
}
markup.strikethrough {
  color: hsla(0, 0%, 20%, 1);
}
markup.list.item {
  color: hsla(0, 0%, 20%, 1);
}
markup.code {
  color: hsla(0, 0%, 20%, 1);
}
markup.link {
  color: hsl(223, 88%, 38%);
}

/* JSX */

jsx.tag.framework {
  color: hsla(0, 0%, 20%, 1);
}

jsx.tag.framework.name {
  color: hsl(203, 96%, 28%);
}

jsx.tag.framework.attribute.name {
  color: hsl(182, 73%, 38%);
}

jsx.tag.framework.attribute.operator {
  color: hsl(182, 73%, 38%);
}
