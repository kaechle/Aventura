meta {
  -theme-display-name: "Aventura Light";
  -theme-interface-style: light;
  -theme-vibrancy: none;
  -theme-accent-color: true;
}

/* window */

meta.window {
  background-color: #f4f4f2;
  border-color: hsla(0, 0%, 0%, 0.1);
}

meta.titlebar {
  color: #49494a;
  background-color: #ffffff;
  border-color: hsla(0, 0%, 60%, 0.5);
}

meta.titlebar.inactive {
  color: hsl(180, 1%, 82%);
  background-color: hsl(0, 0%, 91%);
  border-color: hsla(180, 1%, 78%, 1);
}

/* ui */

meta.button,
meta.document.button {
  color: rgba(64, 63, 59, 0.798);
  background: #ffffff;
  border: linear-gradient(#d6dadc, #d6dadc);
}

meta.button.disabled,
meta.document.button.disabled {
  color: #b9babb;
  background: hsla(200, 20%, 97%, 0.5);
  border: linear-gradient(#e1e5e7, #d1d5d7);
}

meta.button.highlighted,
meta.button.highlighted {
  background: linear-gradient(hsla(0, 0%, 94%, 0.75), rgba(240, 240, 240, 0.75));
}

meta.button.selected,
meta.document.button.selected {
  background: linear-gradient(
    color(display-p3 0.594 0.355 0.754),
    color(display-p3 0.548 0.282 0.727)
  );
  border: linear-gradient(color(display-p3 0.594 0.355 0.754), color(display-p3 0.548 0.282 0.727));
  color: color(display-p3 0.882 0.878 0.875);
}

meta.textfield {
  background-color: hsla(0, 0%, 100%, 1);
  border: linear-gradient(#ebebec, #c1c2c1);
}

meta.document.textfield {
  background-color: hsla(0, 0%, 100%, 1);
  border: linear-gradient(#ebebec, #c1c2c1);
}

meta.textfield.highlighted {
  background-color: hsla(0, 0%, 100%, 1);
  border: linear-gradient(#ebebec, #c1c2c1);
}

meta.document.textfield.highlighted {
  background-color: hsla(0, 0%, 100%, 1);
  border: linear-gradient(#ebebec, #c1c2c1);
}

/* text editing */

meta.document {
  background-color: color(display-p3 0.992 0.988 0.98);
  border-color: color(display-p3 0.882 0.878 0.863);
}

meta.text {
  color: color(display-p3 0.137 0.149 0.149);
}

meta.text.invisible {
  color: color(display-p3 0.941 0.933 0.922);
}

meta.text.selected {
  background-color: color(display-p3 0.792 0.906 0.91);
}

meta.cursor {
  background-color: color(display-p3 0.792 0.906 0.91);
}

meta.indentguide {
  border-color: color(display-p3 0.918 0.914 0.894);
}

meta.gutter {
  color: color(display-p3 0.882 0.878 0.863);
}

meta.gutter.selected {
  color: color(display-p3 0.749 0.745 0.722);
}

/* Syntax styles */

comment {
  color: color(display-p3 0.749 0.745 0.722);
}

declaration {
  color: color(display-p3 0.831 0.431 0.486);
}

bracket,
semicolon,
dot,
comma {
  color: color(display-p3 0.639 0.663 0.667);
}

invalid {
  background-color: color(display-p3 0.706 0.18 0.212);
  color: color(display-p3 0.992 0.988 0.98);
}

link {
  color: color(display-p3 0.322 0.518 0.749);
}

/* keywords */

keyword {
  color: color(display-p3 0.42 0.443 0.447);
  font-style: italic;
  font-weight: 400;
}

keyword.modifier {
  color: color(display-p3 0.227 0.518 0.533);
}

keyword.condition {
  color: color(display-p3 0.318 0.341 0.349);
}

keyword.construct {
  color: color(display-p3 0.227 0.518 0.533);
}

keyword.statement {
  color: color(display-p3 0.227 0.518 0.533);
}

keyword.self {
  color: color(display-p3 0.706 0.18 0.212);
  font-style: italic;
}

keyword.self.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

/* values */

value.boolean {
  color: color(display-p3 0.706 0.18 0.212);
  font-style: italic;
}

value.null {
  color: color(display-p3 0.42 0.443 0.447);
}

value.number {
  color: color(display-p3 0.765 0.357 0.173);
}

value.entity {
  color: color(display-p3 0.318 0.341 0.349);
}

value.symbol {
  color: color(display-p3 0.318 0.341 0.349);
}

/* identifiers */

identifier,
identifier.name {
  color: color(display-p3 0.42 0.443 0.447);
  font-weight: 400;
}

identifier.constant,
identifier.global,
identifier.variable {
  color: color(display-p3 0.318 0.341 0.349);
  font-weight: 400;
}

identifier.constant.prefix,
identifier.global.prefix,
identifier.variable.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

identifier.property {
  color: color(display-p3 0.227 0.518 0.533);
}

identifier.property.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

identifier.decorator,
identifier.function {
  color: color(display-p3 0.227 0.518 0.533);
}

identifier.method {
  color: color(display-p3 0.227 0.518 0.533);
}

identifier.key {
  color: color(display-p3 0.314 0.596 0.435);
  font-style: italic;
}

identifier.argument {
  color: color(display-p3 0.914 0.624 0.22);
  font-weight: 400;
}

identifier.argument.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

/* strings */

string,
string.delimiter {
  color: color(display-p3 0.322 0.518 0.749);
  font-weight: 400;
}

string.escape {
  color: color(display-p3 0.639 0.663 0.667);
}

string.key {
  color: color(display-p3 0.314 0.596 0.435);
  font-style: italic;
}

string-keyword {
  color: color(display-p3 0.318 0.341 0.349);
}

string-template {
  color: color(display-p3 0.318 0.341 0.349);
}

regex {
  color: color(display-p3 0.318 0.341 0.349);
}

regex.escape {
  color: color(display-p3 0.318 0.341 0.349);
}

cdata {
  color: color(display-p3 0.318 0.341 0.349);
}

/* Types */

definition.class.name,
definition.type.name,
definition.package.name,
definition.enum.name,
definition.union.name,
definition.struct.name {
  color: color(display-p3 0.318 0.341 0.349);
}

/* members */

definition.property.name {
  color: color(display-p3 0.318 0.341 0.349);
}

definition.function.name,
definition.method.name {
}

/* javascript and jsx */

javascript.definition.constant.local {
  color: color(display-p3 0.322 0.518 0.749);
}

javascript.operator,
javascript.colon {
  color: color(display-p3 0.914 0.624 0.22);
}

/* tags */

tag,
tag.framework {
  color: color(display-p3 0.639 0.663 0.667);
}

tag.name,
tag.framework.name {
  color: color(display-p3 0.227 0.518 0.533);
}

tag.attribute.name,
tag.framework.attribute.name {
  color: color(display-p3 0.314 0.596 0.435);
  font-style: italic;
  font-weight: 400;
}

tag.attribute.value,
tag.attribute.value.link,
tag.attribute.value.delimiter,
tag.attribute.operator {
  color: color(display-p3 0.322 0.518 0.749);
  font-weight: 400;
}

/* css */

style.at {
  color: color(display-p3 0.42 0.443 0.447);
  font-weight: bold;
}

style.selector.simple.unknown,
style.selector.element,
style.selector.identifier.id,
style.selector.identifier.class,
style.selector.pseudoclass,
style.selector.pseudoelement {
  color: color(display-p3 0.227 0.518 0.533);
}

style.attribute.name,
style.operator {
  color: color(display-p3 0.184 0.196 0.2);
}

style.value.number,
style.value.color.hex,
style.value.keyword,
style.value.color.named {
  color: color(display-p3 0.765 0.357 0.173);
  font-weight: 400;
}

style.value.identifier.function,
css.style.attribute.value,
scss.style.attribute-list,
scss.style.rule {
  color: color(display-p3 0.42 0.443 0.447);
  font-weight: 100;
}

style.attribute-list.brackete,
style.selector.separator,
style.attribute.separator {
  color: color(display-p3 0.51 0.541 0.549);
}

style.variable-definition.identifier.variable.name,
style.value.identifier.variable {
  color: color(display-p3 0.922 0.69 0.239);
  font-weight: 500;
}

style.value.keyword.important {
  color: color(display-p3 0.706 0.18 0.212);
}

style.value.number.unit {
  color: color(display-p3 0.941 0.576 0.396);
}

style.at-rule.import,
style.string {
  color: color(display-p3 0.322 0.518 0.749);
  font-weight: 400;
}

/* Markup */

markup.heading {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.line {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.bold {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.italic {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.strikethrough {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.list.item {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.code {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.link {
  color: color(display-p3 0.796 0.792 0.769);
}
