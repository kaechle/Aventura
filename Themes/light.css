meta {
  -theme-display-name: "Aventura Light";
  -theme-interface-style: light;
  -theme-vibrancy: vibrant;
  -theme-accent-color: true;
}

/* window */

meta.window {
  background: hsla(0, 0%, 96%, 1);
  border: hsla(0, 0%, 50%, 0.28);
}

meta.titlebar {
  background: hsla(60, 0%, 99%, 1);
  border: hsla(0, 0%, 50%, 0.4);
  color: hsla(0, 0%, 30%, 1);
}

meta.titlebar.inactive {
  color: hsl(180, 1%, 82%);
  background: hsl(0, 0%, 91%);
  border: hsla(180, 1%, 78%, 1);
}

/* window ui */

meta.button {
  background: hsla(0, 0%, 50%, 0);
  border: hsla(0, 0%, 50%, 0);
  color: hsla(0, 0%, 14%, 1);
}

meta.button.highlighted {
  background: hsla(0, 0%, 50%, 0.15);
  border: hsla(0, 0%, 50%, 0.15);
  color: hsla(0, 0%, 14%, 1);
}

meta.button.selected {
  background: hsl(16, 62%, 46%);
  border: hsl(16, 62%, 46%);
  color: hsla(0, 0%, 100%, 1);
}

meta.button.disabled {
  background: hsla(0, 0%, 50%, 0);
  border: hsla(0, 0%, 50%, 0);
  color: hsla(0, 0%, 14%, 0.24);
}

meta.textfield {
  background: hsla(0, 0%, 75%, 0.22);
  border: hsla(0, 0%, 75%, 0.6);
}

meta.textfield.highlighted {
  background: hsl(0, 0%, 100%);
  border: hsla(0, 0%, 75%, 0.5);
}

/* text editing ui */

meta.document.button {
  background: hsla(0, 0%, 100%, 0);
  border: hsla(0, 0%, 69%, 1);
  color: hsla(0, 0%, 28%, 1);
}

meta.document.button.highlighted {
  background: hsla(0, 0%, 90%, 1);
  border: hsla(0, 0%, 69%, 1);
  color: hsla(0, 0%, 14%, 1);
}

meta.document.button.selected {
  background: hsla(0, 0%, 100%, 0);
  border: hsla(0, 0%, 69%, 1);
  color: hsl(16, 62%, 46%);
}

meta.document.button.disabled {
  background: hsla(0, 0%, 89%, 0);
  border: hsla(0, 0%, 69%, 1);
  color: hsla(0, 0%, 76%, 1);
}

meta.document.textfield {
  background: hsla(0, 0%, 91%, 1);
  border: hsla(0, 0%, 86%, 1);
}

meta.document.textfield.highlighted {
  background: hsla(0, 0%, 100%, 1);
  border: hsla(0, 0%, 89%, 1);
}

meta.document {
  background: hsla(0, 0%, 100%, 1);
  border: hsls(0, 0%, 90%, 0);
}

meta.text {
  color: hsla(0, 0%, 24%, 1);
}

meta.text.invisible {
  color: hsla(0, 0%, 24%, 0.1);
}

meta.text.selected {
  background: hsl(179, 48%, 84%);
}

meta.cursor {
  background: hsla(0, 0%, 97%, 1);
}

meta.indentguide {
  border-color: hsla(0, 0%, 24%, 0.12);
}

meta.gutter {
  color: hsla(0, 0%, 24%, 0.16);
  font-weight: 100;
}

meta.gutter.selected {
  color: hsla(0, 0%, 24%, 0.5);
  font-weight: 100;
}

/* global syntax styles */

/* TODO: Final adjustment of color tints and refactor */

comment {
  color: hsla(0, 0%, 8%, 0.4);
  font-weight: 100;
}

declaration {
  color: hsla(316, 18%, 43%, 1);
  font-weight: 100;
}

bracket,
semicolon,
dot,
comma,
tag,
operator.colon,
string.delimiter,
json.key.delimiter,
javascript.colon,
tag.framework,
tag.attribute.value.delimiter,
tag.attribute.operator,
style.operator,
style.attribute-list.bracket,
style.selector.separator,
style.attribute.separator {
  color: hsla(0, 0%, 8%, 0.5);
  font-weight: 100;
}

/* TODO: Color for invalid */

style.value.keyword.important,
javascript.operator {
  color: hsl(15, 75%, 48%);
  font-weight: 100;
}

link {
  color: hsla(201, 41%, 53%, 1);
  font-weight: 100;
}

/* keywords */

keyword {
  color: hsla(0, 0%, 8%, 0.7);
  font-weight: 100;
  font-style: italic;
}

keyword.modifier,
keyword.condition,
keyword.construct,
keyword.statement,
keyword.self.prefix {
  color: hsla(0, 0%, 15%, 0.7);
  font-weight: 100;
}

keyword.self {
  color: hsla(316, 18%, 53%, 1);
  font-style: italic;
  font-weight: 100;
}

/* values */

value.boolean {
  color: hsla(104, 20%, 50%, 1);
  font-style: italic;
  font-weight: 300;
}

value.null {
  color: hsla(0, 0%, 8%, 0.5);
  font-weight: 100;
}

value.number {
  color: hsla(355, 46%, 52%, 1);
  font-weight: 400;
}

value.number.unit {
  color: hsla(359, 54%, 55%, 0.7);
  font-weight: 100;
  font-style: italic;
}

value.entity,
value.symbol {
  color: hsla(0, 0%, 8%, 0.7);
  font-weight: 100;
}

/* identifiers */

identifier,
identifier.name {
  color: color(display-p3 0.42 0.443 0.447);
  font-weight: 400;
}

identifier.constant,
identifier.global,
identifier.variable {
  color: color(display-p3 0.318 0.341 0.349);
  font-weight: 400;
}

identifier.constant.prefix,
identifier.global.prefix,
identifier.variable.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

identifier.property {
  color: color(display-p3 0.227 0.518 0.533);
}

identifier.property.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

identifier.decorator,
identifier.function {
  color: color(display-p3 0.227 0.518 0.533);
}

identifier.method {
  color: color(display-p3 0.227 0.518 0.533);
}

identifier.key {
  color: color(display-p3 0.314 0.596 0.435);
  font-style: italic;
}

identifier.argument {
  color: color(display-p3 0.914 0.624 0.22);
  font-weight: 400;
}

identifier.argument.prefix {
  color: color(display-p3 0.318 0.341 0.349);
}

/* strings */

string,
string.delimiter {
  color: color(display-p3 0.322 0.518 0.749);
  font-weight: 400;
}

string.escape {
  color: color(display-p3 0.639 0.663 0.667);
}

string.key {
  color: color(display-p3 0.314 0.596 0.435);
  font-style: italic;
}

string-keyword {
  color: color(display-p3 0.318 0.341 0.349);
}

string-template {
  color: color(display-p3 0.318 0.341 0.349);
}

regex {
  color: color(display-p3 0.318 0.341 0.349);
}

regex.escape {
  color: color(display-p3 0.318 0.341 0.349);
}

cdata {
  color: color(display-p3 0.318 0.341 0.349);
}

/* Types */

definition.class.name,
definition.type.name,
definition.package.name,
definition.enum.name,
definition.union.name,
definition.struct.name {
  color: color(display-p3 0.318 0.341 0.349);
}

/* members */

definition.property.name {
  color: color(display-p3 0.318 0.341 0.349);
}

definition.function.name,
definition.method.name {
}

/* javascript and jsx */

javascript.definition.constant.local {
  color: color(display-p3 0.322 0.518 0.749);
}

javascript.operator,
javascript.colon {
  color: color(display-p3 0.914 0.624 0.22);
}

/* tags */

tag,
tag.framework {
  color: color(display-p3 0.639 0.663 0.667);
}

tag.name,
tag.framework.name {
  color: hsla(174, 27%, 53%, 1);
  font-weight: 400;
}

tag.name,
tag.framework.name {
  color: color(display-p3 0.227 0.518 0.533);
}

tag.attribute.name,
tag.framework.attribute.name {
  color: color(display-p3 0.314 0.596 0.435);
  font-style: italic;
  font-weight: 400;
}

tag.attribute.value,
tag.attribute.value.link,
tag.attribute.value.delimiter,
tag.attribute.operator {
  color: color(display-p3 0.322 0.518 0.749);
  font-weight: 400;
}

/* css */

style.at-rule.import,
style.string,
style.selector.identifier.id,
style.selector.identifier.class {
  color: hsla(220, 35%, 55%, 1);
  font-weight: 400;
}

style.selector.simple.unknown {
  color: hsla(174, 35%, 48%, 1);
  font-weight: 400;
}

style.attribute.name,
css.style.rule {
}

style.selector.element {
  color: hsla(174, 35%, 48%, 1);
  font-weight: 400;
}

style.selector.pseudoclass,
style.selector.pseudoelement {
  color: hsla(203, 36%, 42%, 1);
  font-weight: 200;
}

style.value.color.hex,
style.value.color.named {
  color: hsla(358, 40%, 60%, 1);
  font-weight: 100;
}

style.value.keyword {
  color: hsla(316, 28%, 53%, 1);
  font-weight: 100;
}

style.value.keyword.important {
  color: hsl(15, 75%, 48%);
  font-weight: 100;
}

style.variable-definition.identifier.variable.name,
style.value.identifier.variable {
  color: hsla(40, 100%, 38%, 1);
  font-weight: 400;
}

/* Markup */

markup.heading {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.line {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.bold {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.italic {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.strikethrough {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.list.item {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.code {
  color: color(display-p3 0.796 0.792 0.769);
}

markup.link {
  color: color(display-p3 0.796 0.792 0.769);
}
