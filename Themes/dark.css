meta {
  -theme-display-name: "Aventura Dark";
  -theme-interface-style: dark;
  -theme-vibrancy: vibrant;
  -theme-accent-color: true;
}

/* window  */

meta.window {
  background: hsla(0, 0%, 14%, 1);
  border: hsla(0, 0%, 50%, 0.28);
}

meta.titlebar {
  background-color: hsla(0, 0%, 23%, 1);
  border: hsla(0, 0%, 0%, 0.35);
  color: hsla(23, 0%, 92%, 1);
}

/* window ui */

meta.button {
  border: hsla(0, 0%, 37%, 0);
  background: hsla(0, 0%, 37%, 0);
  color: hsla(360, 0%, 91%, 0.8);
}

meta.button.highlighted {
  border: hsla(0, 0%, 37%, 0.25);
  background: hsla(0, 0%, 37%, 0.25);
  color: hsla(360, 0%, 91%, 0.8);
}

meta.button.selected {
  border: hsl(17, 82%, 64%);
  background: hsl(17, 82%, 64%);
  color: hsla(0, 0%, 100%, 1);
}

meta.button.disabled {
  border: hsla(0, 0%, 37%, 0);
  background: hsla(0, 0%, 37%, 0);
  color: hsla(360, 0%, 91%, 0.3);
}

meta.textfield {
  background: hsla(0, 0%, 100%, 0.13);
  border: hsla(0, 0%, 100%, 0.2);
}

meta.textfield.highlighted {
  background-color: hsla(0, 0%, 0%, 0.7);
}

/* text editing ui */

meta.document.button {
  border: hsla(0, 0%, 37%, 1);
  background: hsla(0, 0%, 37%, 0);
  color: hsla(359, 0%, 87%, 1);
}

meta.document.button.highlighted {
  border: hsla(0, 0%, 37%, 1);
  background: hsla(0, 0%, 37%, 0.4);
  color: hsla(359, 0%, 100%, 1);
}

meta.document.button.selected {
  border: hsla(0, 0%, 37%, 1);
  background: hsla(0, 0%, 37%, 0);
  color: hsl(17, 82%, 64%);
}

meta.document.button.disabled {
  border: hsla(0, 0%, 37%, 1);
  background: hsla(0, 0%, 37%, 0);
  color: hsla(0, 0%, 37%, 1);
}

meta.document.textfield {
  background: hsla(0, 0%, 23%, 1);
  border: hsla(0, 0%, 30%, 1);
}

meta.document.textfield.highlighted {
  background-color: hsla(0, 0%, 15%, 1);
}

meta.document {
  background: hsla(0, 0%, 13%, 1);
  border-color: hsla(0, 0%, 0%, 0);
}

meta.text {
  color: hsla(0, 0%, 92%, 1);
}

meta.text.invisible {
  color: hsla(0, 0%, 92%, 0.1);
}

meta.text.selected {
  background-color: hsl(178, 20%, 38%);
}

meta.cursor {
  background: hsla(0, 0%, 18%, 1);
}

meta.indentguide {
  border-color: hsla(0, 0%, 92%, 0.12);
}

meta.gutter {
  color: hsla(0, 0%, 92%, 0.16);
  font-weight: 100;
}

meta.gutter.selected {
  color: hsla(0, 0%, 92%, 0.5);
  font-weight: 100;
}

/* global syntax styles */

comment {
  color: hsla(0, 0%, 92%, 0.4);
  font-weight: 100;
}

declaration {
  color: hsla(316, 28%, 63%, 1);
  font-weight: 100;
}

bracket,
semicolon,
dot,
comma,
tag,
operator.colon,
string.delimiter,
json.key.delimiter,
javascript.colon,
tag.framework,
tag.attribute.value.delimiter,
tag.attribute.operator,
style.operator,
style.attribute-list.bracket,
style.selector.separator,
style.attribute.separator {
  color: hsla(0, 0%, 92%, 0.5);
  font-weight: 100;
}

style.value.keyword.important,
javascript.operator {
  color: hsl(15, 85%, 62%);
  font-weight: 100;
}

link {
  color: hsla(201, 51%, 53%, 1);
  font-weight: 100;
}

/* keywords */

keyword {
  color: hsla(0, 0%, 92%, 0.7);
  font-style: italic;
  font-weight: 100;
}

keyword.modifier,
keyword.condition,
keyword.construct,
keyword.statement,
keyword.self.prefix,
style.attribute.name,
css.style.rule {
  color: hsla(0, 0%, 92%, 0.8);
  font-weight: 100;
}

keyword.self {
  color: hsla(316, 28%, 63%, 1);
  font-style: italic;
  font-weight: 100;
}

/* values */

value.boolean {
  color: hsla(104, 50%, 75%, 1);
  font-style: italic;
  font-weight: 300;
}

value.null {
  color: hsla(0, 0%, 92%, 0.5);
  font-weight: 100;
}

value.number {
  color: hsla(355, 96%, 82%, 1);
  font-weight: 300;
}

value.number.unit {
  color: hsla(359, 54%, 78%, 0.7);
  font-style: italic;
  font-weight: 100;
}

value.entity,
value.symbol {
  color: hsla(0, 0%, 92%, 0.7);
  font-weight: 100;
}

/* identifiers */

identifier,
identifier.name {
  color: hsla(42, 55%, 67%, 1);
  font-weight: 100;
}

identifier.argument,
style.value.identifier.function,
identifier.function {
  color: hsla(174, 30%, 50%, 1);
  font-weight: 100;
}

identifier.constant,
identifier.global,
identifier.variable,
identifier.constant.prefix,
identifier.global.prefix,
identifier.variable.prefix,
identifier.property,
identifier.property.prefix,
identifier.decorator {
  color: hsla(0, 0%, 92%, 0.8);
  font-weight: 200;
}

style.variable-definition.identifier.variable.name,
style.value.identifier.variable,
identifier.method {
  color: hsla(26, 91%, 75%, 1);
  font-weight: 200;
}

identifier.key,
string.key,
tag.attribute.name,
tag.framework.attribute.name {
  color: hsla(104, 30%, 75%, 1);
  font-weight: 300;
}

identifier.argument.prefix {
  color: hsla(0, 0%, 92%, 0.8);
  font-weight: 100;
}

/* strings */

string {
  color: hsla(220, 30%, 60%, 1);
  font-weight: 400;
}

string.escape {
  color: hsla(49, 8%, 66%, 0.5);
  font-weight: 100;
}

string-keyword,
string-template,
regex,
regex.escape,
cdata,
definition.class.name,
definition.type.name,
definition.package.name,
definition.enum.name,
definition.union.name,
definition.struct.name definition.property.name,
definition.function.name,
definition.method.name {
  color: hsla(49, 8%, 66%, 1);
  font-weight: 100;
}

tag.attribute.value,
tag.attribute.value.link {
  color: hsla(220, 30%, 60%, 1);
  font-style: italic;
  font-weight: 300;
}

/* css */

style.operator,
style.attribute-list.bracket,
style.selector.separator,
style.attribute.separator {
  color: hsla(0, 0%, 92%, 0.5);
  font-weight: 100;
}

style.at-rule.import,
style.string,
style.selector.identifier.id,
style.selector.identifier.class {
  color: hsla(220, 30%, 60%, 1);
  font-weight: 400;
}

tag.name,
tag.framework.name,
style.selector.simple.unknown {
  color: hsla(174, 20%, 45%, 1);
  font-weight: 100;
}

style.selector.element {
  color: hsla(174, 30%, 50%, 1);
  font-weight: 300;
}

style.selector.pseudoclass,
style.selector.pseudoelement {
  color: hsla(203, 26%, 57%, 1);
  font-weight: 100;
}

style.value.color.hex,
style.value.color.named {
  color: hsla(358, 60%, 70%, 1);
  font-weight: 100;
}

style.value.keyword {
  color: hsla(316, 28%, 63%, 1);
  font-weight: 100;
}

style.variable-definition.identifier.variable.name,
style.value.identifier.variable {
  color: hsla(26, 91%, 75%, 1);
  font-weight: 100;
}

/* Markup */

markup.heading {
  color: hsl(15, 85%, 62%);
  font-weight: 500;
}

markup.heading.name {
  color: hsla(0, 0%, 92%, 1);
}

markup.line {
  color: hsla(0, 0%, 92%, 1);
  font-weight: 100;
}

markup.bold {
  color: hsla(0, 0%, 92%, 1);
  font-weight: 500;
}

markup.bold.asterisk {
  color: hsla(174, 30%, 50%, 1);
  font-weight: 500;
}

markup.italic {
  color: hsla(174, 30%, 50%, 1);
  font-weight: 100;
  font-style: italic;
}

markup.strikethrough {
  color: hsla(0, 0%, 92%, 1);
  font-weight: 100;
  text-decoration: line-through;
}

markup.list.item {
  color: hsl(15, 85%, 62%);
  font-weight: 500;
}

markup.code {
  color: hsla(0, 0%, 92%, 1);
  font-weight: 100;
}

markup.link {
  color: hsla(0, 0%, 92%, 1);
  font-weight: 100;
}
