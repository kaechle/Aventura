meta {
  -theme-display-name: "Dapper";
  -theme-interface-style: dark;
  -theme-vibrancy: unset;
  -theme-accent-color: auto;
}

/* Window styles */

meta.window {
  border-color: hsla(0, 0%, 7%, 1);
  background-color: hsla(0, 0%, 16%, 1);
}

meta.titlebar {
  color: hsl(0, 0%, 78%);
  background-color: hsla(0, 0%, 22%, 1);
  border-color: hsla(0, 0%, 12%, 0);
}

meta.titlebar.inactive {
}

meta.button {
  background: hsla(348, 0%, 20%, 1);
  color: hsla(348, 0%, 92%, 1);
  border: hsla(348, 0%, 20%, 1);
}

meta.button.highlighted {
  background: hsla(348, 0%, 23%, 1);
  color: white;
}

meta.button.selected {
  color: white;
}

meta.button.highlighted.selected {
  color: white;
}

meta.button.disabled {
  background: hsla(348, 0%, 20%, 0.4);
  color: hsla(348, 0%, 92%, 0.4);
  border: hsla(348, 0%, 20%, 0.4);
}

meta.textfield {
  background-color: hsla(210, 2%, 18%, 0);
  border-color: hsl(240, 7%, 24%);
}

meta.textfield.highlighted {
  background-color: hsla(240, 7%, 12%, 0);
  border-color: hsl(240, 7%, 24%);
}

/* Document styles */

meta.document {
  background-color: hsla(204, 16%, 11%, 1);
  border-color: hsla(0, 0%, 25%, 1);
}

meta.document.button {
  background: linear-gradient(hsl(240, 7%, 27%), hsl(240, 7%, 23%));
  border: linear-gradient(hsl(240, 7%, 13%), hsl(240, 7%, 5%));
}

meta.document.button.disabled {
  background: linear-gradient(hsla(250, 7%, 27%, 0.3), hsla(250, 7%, 23%, 0.3));
}

meta.document.button.highlighted {
  background: linear-gradient(hsl(240, 7%, 36%), hsl(240, 7%, 32%));
}

meta.document.textfield {
  background-color: hsla(240, 7%, 12%, 0);
  border-color: hsl(240, 7%, 21%);
}

meta.document.textfield.highlighted {
  background-color: hsl(240, 7%, 12%);
  border-color: hsl(240, 7%, 21%);
}

/* Text */

meta.text {
  color: hsla(210, 24%, 77%, 1);
}

meta.text.invisible {
  color: hsl(0, 0%, 27%);
}

meta.text.selected {
  background-color: hsla(207, 17%, 20%, 1);
}

/* Cursor */

meta.cursor {
  background-color: hsl(225, 10%, 15%);
}

/* Indentation Guides */

meta.indentguide {
  border-color: hsla(207, 17%, 14%, 1);
}

/* Gutter */

meta.gutter {
  color: hsla(207, 10%, 22%, 1);
}

meta.gutter.selected {
  background-color: hsla(0, 0%, 0%, 0);
  color: hsla(207, 12%, 38%, 1);
}

/* Syntax styles */

keyword {
  color: hsla(186, 41%, 40%, 1);
  font-weight: bold;
}

comment {
  color: hsla(211, 15%, 31%, 1);
}

processing {
  color: hsl(38, 87%, 54%);
}

declaration {
  color: hsl(210, 11%, 47%);
}

bracket {
  color: hsla(209, 17%, 54%, 1);
}

operator {
  color: hsla(205, 92%, 72%, 1);
}

invalid {
  background-color: hsl(0, 57%, 56%);
  color: hsl(60, 0%, 69%);
}

link {
  color: hsl(206, 35%, 53%);
}

/* Values */

value.boolean {
  color: hsla(351, 49%, 67%, 1);
  font-weight: bold;
}

value.null {
  color: hsl(349, 71%, 72%);
  font-weight: bold;
}

value.number {
  color: hsla(351, 49%, 67%, 1);
}

value.entity {
  color: hsla(35, 62%, 71%, 1);
}

value.symbol {
  color: hsl(242, 35%, 67%);
}

/* Identifiers */

identifier.type {
  color: hsl(188, 36%, 48%);
}

identifier.constant {
}

identifier.global,
identifier.variable {
  color: hsl(188, 36%, 48%);
}

identifier.property,
identifier.decorator,
identifier.function,
identifier.method {
  color: hsla(183, 72%, 67%, 1);
}

identifier.key {
  color: hsl(206, 35%, 53%);
}

identifier.argument {
  color: hsla(34, 72%, 71%, 1);
}

/* Strings */

string {
  color: hsla(215, 81%, 67%, 1);
}

string.key {
  color: hsl(206, 35%, 53%);
}

string-template {
  color: hsl(40, 100%, 40%);
}

string-template.value {
  color: hsl(40, 100%, 40%);
}

regex {
  color: hsla(351, 63%, 69%, 1);
}

regex.escaped {
  color: hsl(38, 87%, 54%);
}

cdata {
  color: hsl(210, 11%, 47%);
}

/* Markup */

markup.heading {
  color: hsl(27, 45%, 54%);
}

markup.line {
  color: hsl(50, 52%, 61%);
}

markup.bold {
  color: hsl(195, 50%, 50%);
  font-weight: bold;
}

markup.italic {
  color: hsl(166, 36%, 56%);
  font-style: italic;
}

markup.strikethrough {
  color: hsl(5, 96%, 68%);
}

markup.list.item {
  color: hsl(27, 45%, 54%);
}

markup.code {
  background-color: rgba(128, 128, 128, 0.2);
}

markup.link {
  color: hsl(224, 100%, 66%);
}

/* Types */

definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
  color: hsl(194, 100%, 68%);
}

/* Members */

definition.property property.name,
definition.function function.name,
definition.method method.name {
  color: hsl(195, 50%, 50%);
}

/* Tags */

tag {
  color: hsla(183, 97%, 29%, 1);
}

tag.framework {
  color: hsl(25, 98%, 62%);
}

tag.attribute.name {
  color: hsla(183, 67%, 52%, 1);
}

tag.attribute.value {
  color: hsla(215, 81%, 67%, 1);
}

tag.attribute.value.link {
  color: hsla(215, 81%, 67%, 1);
}

/* Styles */

style.at {
  color: hsl(25, 98%, 62%);
}

style.selector.element {
  font-weight: bold;
}

style.selector.identifier.id {
  color: hsl(166, 75%, 78%);
}

style.selector.identifier.class {
  color: hsl(166, 75%, 78%);
}

style.selector.pseudoclass {
  color: hsl(166, 75%, 78%);
}

style.selector.pseudoelement {
  color: hsl(166, 75%, 78%);
}

style.attribute.name {
  color: hsl(166, 36%, 56%);
}

style.value.number {
  color: hsl(50, 52%, 61%);
}

style.value.color.hex {
  color: hsl(50, 52%, 61%);
}

style.value.keyword {
  color: hsl(336, 57%, 63%);
  font-weight: bold;
}

style.value.color.named {
  color: hsl(336, 57%, 63%);
  font-weight: bold;
}

style.value.identifier.function {
  color: hsl(195, 50%, 50%);
}

/* Terminal */

terminal.black {
  color: hsl(0, 0%, 16%);
}

terminal.red {
  color: hsl(0, 57%, 56%);
}

terminal.green {
  color: hsl(142, 37%, 43%);
}

terminal.yellow {
  color: hsl(40, 100%, 40%);
}

terminal.blue {
  color: hsl(208, 48%, 37%);
}

terminal.magenta {
  color: hsl(266, 42%, 48%);
}

terminal.cyan {
  color: hsl(183, 55%, 31%);
}

terminal.white {
  color: hsl(60, 0%, 89%);
}

terminal.bright-black {
  color: hsl(0, 0%, 24%);
}

terminal.bright-red {
  color: hsl(349, 71%, 72%);
}

terminal.bright-green {
  color: hsl(147, 42%, 61%);
}

terminal.bright-yellow {
  color: hsl(38, 87%, 54%);
}

terminal.bright-blue {
  color: hsl(206, 35%, 53%);
}

terminal.bright-magenta {
  color: hsl(242, 35%, 67%);
}

terminal.bright-cyan {
  color: hsl(188, 36%, 48%);
}

terminal.bright-white {
  color: hsl(0, 0%, 95%);
}
